@startuml full-app

footer Kubernetes Plant-UML
' scale max 1024 width

skinparam nodesep 30
skinparam ranksep 30

' Azure
!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/release/2-1/dist

!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/AzureSimplified.puml

' Kubernetes
!define KubernetesPuml https://raw.githubusercontent.com/dcasati/kubernetes-PlantUML/master/dist

!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml
!includeurl KubernetesPuml/OSS/KubernetesSvc.puml
!includeurl KubernetesPuml/OSS/KubernetesIng.puml
!includeurl KubernetesPuml/OSS/KubernetesDeploy.puml


actor "User" as userAlias
actor "Admin" as adminAlias
left to right direction

' Kubernetes Components
Cluster_Boundary(cluster, "Kubernetes Cluster") {
    Namespace_Boundary(default, "default") {
        KubernetesSvc(mongo, "Mongo", "")
        KubernetesSvc(minio, "Minio", "")
        KubernetesSvc(key,"Keycloack", "")
    }

    Namespace_Boundary(nsfn, "openfaas-fn") {
        KubernetesSvc(fndf, "[function]\ndonwload-forecast", "")
        KubernetesSvc(fnpf, "[function]\nparse-forecast", "")
        KubernetesSvc(fngf, "[function]\nget-forecast","")
    }

    Namespace_Boundary(ns, "openfaas") {
        KubernetesSvc(o2p, "oauth2-proxy", "")
        KubernetesSvc(ofg, "openfaas Gateway", "")
        KubernetesSvc(nats, "nats", "")
        KubernetesDeploy(ofcc,"cron-connector","")
        KubernetesDeploy(natsconector, "nats-connector","")
        KubernetesIng(ingress, "API Gateway", "")
    }

}

' 'Static Web
Rel(userAlias, ingress, "Load Web", "0")
Rel(ingress, minio, "Static web", "0")


'Import forecast
Rel(ofcc, ofg, "Launch import\nCRON JOB", "1,1")
Rel(ofg, fndf, "Download forecast", "1,2")
Rel(fndf, minio, "Save forecast files", "1,3")
Rel_L(minio, nats, "Event new file", "1,4")
Rel_U(nats, natsconector, "Queme message\nNew file", "1,5")
Rel(natsconector, ofg,  "Message\nNew file", "1,6")
Rel(ofg, fnpf, "Message\nNew file", "1,7")
Rel(fnpf, mongo, "Parse forecast file", "1,8")

' Rel_L(fnpf, nats, " ", "Alert forecast")

'API
Rel(userAlias, ingress, "Get forecast", "2")
Rel(ingress, ofg, "Get forecast", "2,1")
Rel(ofg, fngf, "Get forecast", "2,2")
Rel(fngf, mongo, "Query forecast", "2,3" )

'Admin
Rel(adminAlias, ingress, "Reload forecast", "3")
Rel(ingress, o2p,"Reload forecast", "3,1")
Rel(o2p, key, "credentials", "3,2")
Rel(key, o2p, "credentials", "3,3")
Rel(o2p,ofg, "Reload forecast", "3,4")
Rel(ofg, fndf, "Download forecast", "3,5")




@enduml